package com.asm;

import org.objectweb.asm.*;

import java.io.FileOutputStream;

public class EnhancerDump implements Opcodes {

    public static byte[] dump() throws Exception {
        ClassWriter cw = new ClassWriter(0);
        FieldVisitor fv;
        MethodVisitor mv;
        AnnotationVisitor av0;

        cw.visit(V1_6, ACC_PUBLIC + ACC_SUPER, "com/taobao/arthas/core/advisor/Enhancer", null, "java/lang/Object", new String[]{"java/lang/instrument/ClassFileTransformer"});

        cw.visitInnerClass("com/taobao/arthas/core/advisor/Enhancer$2", null, null, ACC_STATIC);

        cw.visitInnerClass("com/taobao/arthas/core/advisor/Enhancer$1", null, null, 0);

        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "logger", "Lcom/taobao/middleware/logger/Logger;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "adviceId", "I", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "isTracing", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "skipJDKTrace", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "matchingClasses", "Ljava/util/Set;", "Ljava/util/Set<Ljava/lang/Class<*>;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "methodNameMatcher", "Lcom/taobao/arthas/core/util/matcher/Matcher;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "affect", "Lcom/taobao/arthas/core/util/affect/EnhancerAffect;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "classBytesCache", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/Class<*>;[B>;", null);
            fv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE, "<init>", "(IZZLjava/util/Set;Lcom/taobao/arthas/core/util/matcher/Matcher;Lcom/taobao/arthas/core/util/affect/EnhancerAffect;)V", "(IZZLjava/util/Set<Ljava/lang/Class<*>;>;Lcom/taobao/arthas/core/util/matcher/Matcher;Lcom/taobao/arthas/core/util/affect/EnhancerAffect;)V", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "com/taobao/arthas/core/advisor/Enhancer", "adviceId", "I");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitFieldInsn(PUTFIELD, "com/taobao/arthas/core/advisor/Enhancer", "isTracing", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitFieldInsn(PUTFIELD, "com/taobao/arthas/core/advisor/Enhancer", "skipJDKTrace", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitFieldInsn(PUTFIELD, "com/taobao/arthas/core/advisor/Enhancer", "matchingClasses", "Ljava/util/Set;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitFieldInsn(PUTFIELD, "com/taobao/arthas/core/advisor/Enhancer", "methodNameMatcher", "Lcom/taobao/arthas/core/util/matcher/Matcher;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitFieldInsn(PUTFIELD, "com/taobao/arthas/core/advisor/Enhancer", "affect", "Lcom/taobao/arthas/core/util/affect/EnhancerAffect;");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 7);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE, "spy", "(Ljava/lang/ClassLoader;)V", null, new String[]{"java/lang/Exception"});
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNONNULL, l0);
            mv.visitInsn(RETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitLdcInsn("java.arthas.Spy");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLdcInsn(Type.getType("Lcom/taobao/arthas/core/advisor/Enhancer;"));
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("init");
            mv.visitIntInsn(BIPUSH, 7);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Class");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitLdcInsn(Type.getType("Ljava/lang/ClassLoader;"));
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_1);
            mv.visitLdcInsn(Type.getType("Ljava/lang/reflect/Method;"));
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_2);
            mv.visitLdcInsn(Type.getType("Ljava/lang/reflect/Method;"));
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_3);
            mv.visitLdcInsn(Type.getType("Ljava/lang/reflect/Method;"));
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_4);
            mv.visitLdcInsn(Type.getType("Ljava/lang/reflect/Method;"));
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_5);
            mv.visitLdcInsn(Type.getType("Ljava/lang/reflect/Method;"));
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitIntInsn(BIPUSH, 6);
            mv.visitLdcInsn(Type.getType("Ljava/lang/reflect/Method;"));
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ACONST_NULL);
            mv.visitIntInsn(BIPUSH, 7);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("ON_BEFORE_METHOD");
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/reflect/FieldUtils", "getField", "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("ON_RETURN_METHOD");
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/reflect/FieldUtils", "getField", "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("ON_THROWS_METHOD");
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/reflect/FieldUtils", "getField", "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("BEFORE_INVOKING_METHOD");
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/reflect/FieldUtils", "getField", "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("AFTER_INVOKING_METHOD");
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/reflect/FieldUtils", "getField", "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitIntInsn(BIPUSH, 6);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("THROW_INVOKING_METHOD");
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/reflect/FieldUtils", "getField", "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;", false);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Field", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitInsn(POP);
            mv.visitInsn(RETURN);
            mv.visitMaxs(7, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "transform", "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B", "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class<*>;Ljava/security/ProtectionDomain;[B)[B", new String[]{"java/lang/instrument/IllegalClassFormatException"});
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
            Label l3 = new Label();
            Label l4 = new Label();
            Label l5 = new Label();
            mv.visitTryCatchBlock(l3, l4, l5, "java/lang/Throwable");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/taobao/arthas/core/advisor/Enhancer", "matchingClasses", "Ljava/util/Set;");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "contains", "(Ljava/lang/Object;)Z", true);
            Label l6 = new Label();
            mv.visitJumpInsn(IFNE, l6);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "classBytesCache", "Ljava/util/Map;");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "[B");
            mv.visitVarInsn(ASTORE, 7);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ALOAD, 7);
            Label l7 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l7);
            mv.visitTypeInsn(NEW, "org/objectweb/asm/ClassReader");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKESPECIAL, "org/objectweb/asm/ClassReader", "<init>", "([B)V", false);
            mv.visitVarInsn(ASTORE, 6);
            Label l8 = new Label();
            mv.visitJumpInsn(GOTO, l8);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.TOP, "[B"}, 0, null);
            mv.visitTypeInsn(NEW, "org/objectweb/asm/ClassReader");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKESPECIAL, "org/objectweb/asm/ClassReader", "<init>", "([B)V", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_FULL, 8, new Object[]{"com/taobao/arthas/core/advisor/Enhancer", "java/lang/ClassLoader", "java/lang/String", "java/lang/Class", "java/security/ProtectionDomain", "[B", "org/objectweb/asm/ClassReader", "[B"}, 0, new Object[]{});
            mv.visitTypeInsn(NEW, "com/taobao/arthas/core/advisor/Enhancer$1");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitInsn(ICONST_3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, "com/taobao/arthas/core/advisor/Enhancer$1", "<init>", "(Lcom/taobao/arthas/core/advisor/Enhancer;Lorg/objectweb/asm/ClassReader;ILjava/lang/ClassLoader;)V", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitLabel(l3);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitTypeInsn(NEW, "com/taobao/arthas/core/advisor/AdviceWeaver");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/taobao/arthas/core/advisor/Enhancer", "adviceId", "I");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/taobao/arthas/core/advisor/Enhancer", "isTracing", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/taobao/arthas/core/advisor/Enhancer", "skipJDKTrace", "Z");
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/asm/ClassReader", "getClassName", "()Ljava/lang/String;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/taobao/arthas/core/advisor/Enhancer", "methodNameMatcher", "Lcom/taobao/arthas/core/util/matcher/Matcher;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/taobao/arthas/core/advisor/Enhancer", "affect", "Lcom/taobao/arthas/core/util/affect/EnhancerAffect;");
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKESPECIAL, "com/taobao/arthas/core/advisor/AdviceWeaver", "<init>", "(IZZLjava/lang/String;Lcom/taobao/arthas/core/util/matcher/Matcher;Lcom/taobao/arthas/core/util/affect/EnhancerAffect;Lorg/objectweb/asm/ClassVisitor;)V", false);
            mv.visitIntInsn(BIPUSH, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/asm/ClassReader", "accept", "(Lorg/objectweb/asm/ClassVisitor;I)V", false);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/asm/ClassWriter", "toByteArray", "()[B", false);
            mv.visitVarInsn(ASTORE, 9);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "classBytesCache", "Ljava/util/Map;");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/taobao/arthas/core/advisor/Enhancer", "affect", "Lcom/taobao/arthas/core/util/affect/EnhancerAffect;");
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/advisor/Enhancer", "dumpClassIfNecessary", "(Ljava/lang/String;[BLcom/taobao/arthas/core/util/affect/EnhancerAffect;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "com/taobao/arthas/core/advisor/Enhancer", "affect", "Lcom/taobao/arthas/core/util/affect/EnhancerAffect;");
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/taobao/arthas/core/util/affect/EnhancerAffect", "cCnt", "(I)I", false);
            mv.visitInsn(POP);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, "com/taobao/arthas/core/advisor/Enhancer", "spy", "(Ljava/lang/ClassLoader;)V", false);
            mv.visitLabel(l1);
            Label l9 = new Label();
            mv.visitJumpInsn(GOTO, l9);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"com/taobao/arthas/core/advisor/Enhancer", "java/lang/ClassLoader", "java/lang/String", "java/lang/Class", "java/security/ProtectionDomain", "[B", "org/objectweb/asm/ClassReader", "[B", "org/objectweb/asm/ClassWriter", "[B"}, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 10);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "logger", "Lcom/taobao/middleware/logger/Logger;");
            mv.visitLdcInsn("print spy failed. classname={};loader={};");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_2);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/taobao/middleware/logger/Logger", "warn", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V", true);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitLabel(l4);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_FULL, 9, new Object[]{"com/taobao/arthas/core/advisor/Enhancer", "java/lang/ClassLoader", "java/lang/String", "java/lang/Class", "java/security/ProtectionDomain", "[B", "org/objectweb/asm/ClassReader", "[B", "org/objectweb/asm/ClassWriter"}, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 9);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "logger", "Lcom/taobao/middleware/logger/Logger;");
            mv.visitLdcInsn("transform loader[{}]:class[{}] failed.");
            mv.visitInsn(ICONST_3);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_2);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/taobao/middleware/logger/Logger", "warn", "(Ljava/lang/String;[Ljava/lang/Object;)V", true);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(10, 11);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "dumpClassIfNecessary", "(Ljava/lang/String;[BLcom/taobao/arthas/core/util/affect/EnhancerAffect;)V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/io/IOException");
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/GlobalOptions", "isDump", "Z");
            Label l3 = new Label();
            mv.visitJumpInsn(IFNE, l3);
            mv.visitInsn(RETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitTypeInsn(NEW, "java/io/File");
            mv.visitInsn(DUP);
            mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            mv.visitLdcInsn("./arthas-class-dump/");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitLdcInsn(".class");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitTypeInsn(NEW, "java/io/File");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "getParent", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "mkdirs", "()Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "exists", "()Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "logger", "Lcom/taobao/middleware/logger/Logger;");
            mv.visitLdcInsn("create dump classpath:{} failed.");
            mv.visitInsn(ICONST_1);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/taobao/middleware/logger/Logger", "warn", "(Ljava/lang/String;[Ljava/lang/Object;)V", true);
            mv.visitInsn(RETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/io/File", "java/io/File"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/FileUtils", "writeByteArrayToFile", "(Ljava/io/File;[B)V", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/taobao/arthas/core/util/affect/EnhancerAffect", "getClassDumpFiles", "()Ljava/util/Collection;", false);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l1);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/io/IOException"});
            mv.visitVarInsn(ASTORE, 5);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "logger", "Lcom/taobao/middleware/logger/Logger;");
            mv.visitLdcInsn("dump class:{} to file {} failed.");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_2);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(AASTORE);
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/taobao/middleware/logger/Logger", "warn", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V", true);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(7, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "filter", "(Ljava/util/Set;)V", "(Ljava/util/Set<Ljava/lang/Class<*>;>;)V", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 1);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "java/lang/Class");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ALOAD, 2);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/advisor/Enhancer", "isSelf", "(Ljava/lang/Class;)Z", false);
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/advisor/Enhancer", "isUnsafeClass", "(Ljava/lang/Class;)Z", false);
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/advisor/Enhancer", "isUnsupportedClass", "(Ljava/lang/Class;)Z", false);
            Label l3 = new Label();
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Class"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "remove", "()V", true);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "isSelf", "(Ljava/lang/Class;)Z", "(Ljava/lang/Class<*>;)Z", null);
            mv.visitCode();
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ALOAD, 0);
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
            mv.visitLdcInsn(Type.getType("Lcom/taobao/arthas/core/advisor/Enhancer;"));
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/ArthasCheckUtils", "isEquals", "(Ljava/lang/Object;Ljava/lang/Object;)Z", false);
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "isUnsafeClass", "(Ljava/lang/Class;)Z", "(Ljava/lang/Class<*>;)Z", null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/GlobalOptions", "isUnsafe", "Z");
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
            mv.visitJumpInsn(IFNONNULL, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "isUnsupportedClass", "(Ljava/lang/Class;)Z", "(Ljava/lang/Class<*>;)Z", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isArray", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isInterface", "()Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isEnum", "()Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn(Type.getType("Ljava/lang/Class;"));
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn(Type.getType("Ljava/lang/Integer;"));
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn(Type.getType("Ljava/lang/reflect/Method;"));
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_1);
            Label l2 = new Label();
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC + ACC_SYNCHRONIZED, "enhance", "(Ljava/lang/instrument/Instrumentation;IZZLcom/taobao/arthas/core/util/matcher/Matcher;Lcom/taobao/arthas/core/util/matcher/Matcher;)Lcom/taobao/arthas/core/util/affect/EnhancerAffect;", null, new String[]{"java/lang/instrument/UnmodifiableClassException"});
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, null);
            Label l3 = new Label();
            mv.visitTryCatchBlock(l2, l3, l2, null);
            mv.visitTypeInsn(NEW, "com/taobao/arthas/core/advisor/Enhancer");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKESPECIAL, "com/taobao/arthas/core/advisor/Enhancer", "<init>", "(IZZLjava/util/Set;Lcom/taobao/arthas/core/util/matcher/Matcher;Lcom/taobao/arthas/core/util/affect/EnhancerAffect;)V", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/instrument/Instrumentation", "addTransformer", "(Ljava/lang/instrument/ClassFileTransformer;Z)V", true);
            mv.visitLabel(l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/instrument/Instrumentation", "removeTransformer", "(Ljava/lang/instrument/ClassFileTransformer;)Z", true);
            mv.visitInsn(POP);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_FULL, 7, new Object[]{"java/lang/instrument/Instrumentation", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "com/taobao/arthas/core/util/matcher/Matcher", "com/taobao/arthas/core/util/matcher/Matcher", "com/taobao/arthas/core/advisor/Enhancer"}, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 7);
            mv.visitLabel(l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/instrument/Instrumentation", "removeTransformer", "(Ljava/lang/instrument/ClassFileTransformer;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(8, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC + ACC_SYNCHRONIZED, "reset", "(Ljava/lang/instrument/Instrumentation;Lcom/taobao/arthas/core/util/matcher/Matcher;)Lcom/taobao/arthas/core/util/affect/EnhancerAffect;", null, new String[]{"java/lang/instrument/UnmodifiableClassException"});
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, null);
            Label l3 = new Label();
            mv.visitTryCatchBlock(l2, l3, l2, null);
            mv.visitTypeInsn(NEW, "com/taobao/arthas/core/util/affect/EnhancerAffect");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "com/taobao/arthas/core/util/affect/EnhancerAffect", "<init>", "()V", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitTypeInsn(NEW, "java/util/HashSet");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/util/HashSet", "<init>", "()V", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "classBytesCache", "Ljava/util/Map;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "keySet", "()Ljava/util/Set;", true);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 4);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"com/taobao/arthas/core/util/affect/EnhancerAffect", "java/util/Set", "java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l5 = new Label();
            mv.visitJumpInsn(IFEQ, l5);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "java/lang/Class");
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getName", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/taobao/arthas/core/util/matcher/Matcher", "matching", "(Ljava/lang/Object;)Z", true);
            Label l6 = new Label();
            mv.visitJumpInsn(IFEQ, l6);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitTypeInsn(NEW, "com/taobao/arthas/core/advisor/Enhancer$2");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "com/taobao/arthas/core/advisor/Enhancer$2", "<init>", "()V", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/advisor/Enhancer", "enhance", "(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;Ljava/util/Set;)V", false);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "logger", "Lcom/taobao/middleware/logger/Logger;");
            mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            mv.visitLdcInsn("Success to reset classes: ");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/taobao/middleware/logger/Logger", "info", "(Ljava/lang/String;)V", true);
            mv.visitLabel(l1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 5);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/lang/instrument/ClassFileTransformer", "java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l8 = new Label();
            mv.visitJumpInsn(IFEQ, l8);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "java/lang/Class");
            mv.visitVarInsn(ASTORE, 6);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "classBytesCache", "Ljava/util/Map;");
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/taobao/arthas/core/util/affect/EnhancerAffect", "cCnt", "(I)I", false);
            mv.visitInsn(POP);
            mv.visitJumpInsn(GOTO, l7);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            Label l9 = new Label();
            mv.visitJumpInsn(GOTO, l9);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 7);
            mv.visitLabel(l3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 8);
            Label l10 = new Label();
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_FULL, 9, new Object[]{"java/lang/instrument/Instrumentation", "com/taobao/arthas/core/util/matcher/Matcher", "com/taobao/arthas/core/util/affect/EnhancerAffect", "java/util/Set", "java/lang/instrument/ClassFileTransformer", Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable", "java/util/Iterator"}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l11 = new Label();
            mv.visitJumpInsn(IFEQ, l11);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "java/lang/Class");
            mv.visitVarInsn(ASTORE, 9);
            mv.visitFieldInsn(GETSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "classBytesCache", "Ljava/util/Map;");
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/taobao/arthas/core/util/affect/EnhancerAffect", "cCnt", "(I)I", false);
            mv.visitInsn(POP);
            mv.visitJumpInsn(GOTO, l10);
            mv.visitLabel(l11);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(3, 10);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, "enhance", "(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;Ljava/util/Set;)V", "(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;Ljava/util/Set<Ljava/lang/Class<*>;>;)V", new String[]{"java/lang/instrument/UnmodifiableClassException"});
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, null);
            Label l3 = new Label();
            mv.visitTryCatchBlock(l2, l3, l2, null);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/instrument/Instrumentation", "addTransformer", "(Ljava/lang/instrument/ClassFileTransformer;Z)V", true);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "size", "()I", true);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitTypeInsn(ANEWARRAY, "java/lang/Class");
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "toArray", "()[Ljava/lang/Object;", true);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/System", "arraycopy", "(Ljava/lang/Object;ILjava/lang/Object;II)V", false);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ARRAYLENGTH);
            mv.visitJumpInsn(IFLE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/instrument/Instrumentation", "retransformClasses", "([Ljava/lang/Class;)V", true);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/instrument/Instrumentation", "removeTransformer", "(Ljava/lang/instrument/ClassFileTransformer;)Z", true);
            mv.visitInsn(POP);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 5);
            mv.visitLabel(l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/instrument/Instrumentation", "removeTransformer", "(Ljava/lang/instrument/ClassFileTransformer;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
            mv.visitCode();
            mv.visitMethodInsn(INVOKESTATIC, "com/taobao/arthas/core/util/LogUtil", "getArthasLogger", "()Lcom/taobao/middleware/logger/Logger;", false);
            mv.visitFieldInsn(PUTSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "logger", "Lcom/taobao/middleware/logger/Logger;");
            mv.visitTypeInsn(NEW, "java/util/WeakHashMap");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/util/WeakHashMap", "<init>", "()V", false);
            mv.visitFieldInsn(PUTSTATIC, "com/taobao/arthas/core/advisor/Enhancer", "classBytesCache", "Ljava/util/Map;");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 0);
            mv.visitEnd();
        }
        cw.visitEnd();

        return cw.toByteArray();
    }

    public static void main(String[] args) {
        try {
            byte[] code = dump();

            FileOutputStream fos = new FileOutputStream("/Users/oneapm/git/z_alert_test/asm/target/Example.class");
            fos.write(code);
            fos.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
